# tactiq.io free youtube transcript
# No title found
# https://www.youtube.com/watch/3lqYMn1PYIE

00:00:00.000 No text
00:00:00.040 hello everybody and welcome back this is
00:00:01.719 part two in a three-part series looking
00:00:03.480 at image reconstruction in CT in the
00:00:06.000 first part we focused on simple back
00:00:07.560 projection now we're going to move on to
00:00:09.360 a separate entity known as filtered back
00:00:11.360 projection and you'll notice there's a
00:00:13.360 lot of overlap in the methodology here
00:00:15.400 but we're going to make some subtle
00:00:16.640 changes that are going to account for
00:00:18.359 some of the shortcomings that be noticed
00:00:19.960 in simple back projection so let's
00:00:22.119 revisit the image that we created in
00:00:23.680 simple back projection remember we've
00:00:25.000 No text
00:00:26.000 got projection data at multiple
00:00:27.560 different angles around the patient and
00:00:30.080 we're smearing that data back that
00:00:31.960 attenuation data back across these
00:00:34.120 different angles and ultimately that
00:00:36.200 data is going to accumulate and form
00:00:38.239 this image here now you can see the
00:00:39.520 major issue with this image is the
00:00:41.600 blurring here we've got poor Edge
00:00:43.320 definition and we've got a lot of
00:00:44.800 blurring radial blurring occurring from
00:00:47.039 all the attenuating structures here
00:00:49.079 that's the main downfall of simple back
00:00:50.960 projection we've got good contrast what
00:00:53.120 we've got here is what's known as a low
00:00:54.480 pass filter we're going to cover that
00:00:55.719 later on we want to now get rid of this
00:00:58.399 blurring remember when we creating this
00:01:00.760 image in simple back projection this is
00:01:02.760 a mathematical calculation we're
00:01:04.559 overlapping data in a specific array and
00:01:07.280 then we're allocating each pixel within
00:01:09.520 this image a specific value an
00:01:11.320 attenuation value based on all these
00:01:13.560 different projections here this is a
00:01:15.600 calculation is not an actual image and
00:01:18.200 the process of simple back projection is
00:01:20.600 introducing blur into the image in a
00:01:23.000 predictable and calculable way what we
00:01:26.439 want to do then is account for that blur
00:01:28.759 with some mathematical function that's
00:01:30.759 going to allow us to extract the true
00:01:33.640 attenuation data that's underlying here
00:01:36.479 it's this process here of applying some
00:01:38.680 mathematical function to this simple
00:01:40.880 back projection data that is known as
00:01:42.759 filtered back projection and that's what
00:01:44.079 we're going to focus on today now think
00:01:45.920 it's useful to revisit the formation of
00:01:48.320 that simple back projection image and
00:01:50.240 see how we're introducing blur into the
00:01:52.439 image and we're going to look at what a
00:01:53.719 low pass filter is notice that as we add
00:01:56.680 each projection here we're smearing
00:01:58.960 attenuation higher attenuation values
00:02:01.600 beyond the subject that's attenuating
00:02:03.920 our x-rays there's no attenuation
00:02:06.360 occurring in these regions here but the
00:02:08.440 data suggests that there is and that's
00:02:09.959 because of that smearing of the data as
00:02:12.480 we add each layer you can see how we
00:02:14.440 lose Edge definition and add blur to the
00:02:17.440 edges here the edges aren't well defined
00:02:21.160 what also happens as we add each layer
00:02:23.440 of projection data the attenuating
00:02:25.720 structures are getting brighter and
00:02:27.000 brighter we're adding more and more
00:02:29.200 values to these attenuating structures
00:02:31.160 in The Matrix that we're forming here
00:02:33.319 now importantly when we're creating an
00:02:35.080 image like this we're again creating an
00:02:37.200 array of numbers an array of attenuation
00:02:39.640 values that represent our calculated
00:02:41.920 attenuation at each pixel in the image
00:02:44.879 if we were to look at areas in the image
00:02:46.680 where there's very little change over
00:02:48.879 distance to Signal intensity that's
00:02:50.920 what's known as low frequency parts of
00:02:53.000 the image you can see if we were
00:02:54.599 crossing this part of the image here
00:02:56.760 there's very little change in true
00:02:58.560 attenuation data
00:03:00.400 as we reach the edge here where we get a
00:03:02.599 large change in Signal intensity that's
00:03:05.040 what's known as our high frequency areas
00:03:07.360 in our image we're going to look at
00:03:09.319 later we're going to fure transform
00:03:11.200 spatial images into frequency domain
00:03:13.680 images and we'll look closer at low and
00:03:15.959 high frequency data what a low pass
00:03:19.000 filter essentially is it's is allowing
00:03:21.760 low frequency data to pass through the
00:03:24.280 filter whilst attenuating high frequency
00:03:26.720 data we are reinforcing areas in the
00:03:29.799 image that are low frequency where
00:03:31.959 signal change doesn't occur very much
00:03:34.560 and we are suppressing The High
00:03:36.159 Frequency data areas causing blur at the
00:03:39.560 edges of our image now obviously we're
00:03:41.400 creating a very simple image here you
00:03:43.239 can imagine if this was a clinical image
00:03:45.560 how much more complex these structures
00:03:47.360 would be and the edges in that image are
00:03:49.400 going to be very poorly defined we're
00:03:51.080 going to create an image that actually
00:03:52.519 isn't usable to us clinically now we can
00:03:55.120 think of this image that we've created
00:03:56.920 as containing two separate data sets
00:03:58.720 it's got our true uation data and it's
00:04:00.000 No text
00:04:01.400 got some blur function that we've
00:04:03.319 introduced by the process of simple back
00:04:06.840 projection now if we were to perform
00:04:09.599 some mathematical operation between
00:04:11.360 these two data sets we would create a
00:04:14.319 simple back projection image that
00:04:15.640 blurred image that we saw this
00:04:17.759 mathematical operation is what's known
00:04:19.238 as convolution it's going to be outside
00:04:21.079 the scope of this talk you think about
00:04:23.960 multiplying two data sets or adding two
00:04:26.320 data sets or subtracting two data sets
00:04:28.880 another way that we can can combine two
00:04:30.520 data sets is by this process of
00:04:32.080 convolution you might see this sign here
00:04:34.240 you might also see this this also
00:04:35.800 represents convolution I'm going to
00:04:38.039 leave some resources below this video if
00:04:40.280 you're unsure as to what convolution is
00:04:42.479 convolution is often used in image
00:04:44.320 processing and you'll see it when you
00:04:45.759 are trying to blur images or when you're
00:04:47.320 trying to sharpen images we use
00:04:49.199 convolution a lot I'd highly encourage
00:04:51.160 you to go check out those resources if
00:04:52.759 you want to dive more into this the
00:04:54.919 explanation that we're using today is
00:04:56.639 more of a visual explanation not a
00:04:58.520 mathematical explanation
00:05:00.160 but if we convolute this data you can
00:05:01.840 see the blur function here if we look at
00:05:03.880 as a 3D function how much higher the
00:05:07.080 magnitude is at the center of this blur
00:05:09.600 function and then we get radial
00:05:11.639 expansion of the blur function out here
00:05:14.039 this is showing us a symmetrical nature
00:05:16.039 of blur in simple back projection it's
00:05:18.160 also what's known as a point spread
00:05:19.880 function this blur function is going to
00:05:22.120 applied to every pixel within this data
00:05:25.160 set here it's not only applied to the
00:05:26.960 middle and spread out so we comp Bine
00:05:30.039 these two data sets and we create our
00:05:31.840 simple back projection image this
00:05:34.560 process is just defining how simple back
00:05:37.160 projection goes about creating an image
00:05:39.479 I want to show you if we were to have an
00:05:40.919 image with just two points on here
00:05:43.000 notice how the blur is radial from each
00:05:45.520 pixel within this image here we're not
00:05:48.600 getting blur from the center out where
00:05:50.400 we get more blur on the outside of the
00:05:52.240 circle this is what's known as a point
00:05:54.120 spread function every point in our
00:05:56.080 calculated image has blur emanating outr
00:05:59.280 from each one of these points that's a
00:06:01.160 function of this below function here so
00:06:04.280 we take our simple back projection image
00:06:06.720 now we need a way of extracting that
00:06:09.120 blur function out and calculating the
00:06:11.680 true attenuation data that's filtered
00:06:13.720 back projection let's look at that a
00:06:14.960 little bit more closely now in order to
00:06:17.120 remove this blur function using filtered
00:06:19.360 back projection we first need to
00:06:20.880 understand how blur is represented in an
00:06:22.960 image and up until now we've been
00:06:23.000 No text
00:06:24.800 looking at images in the 2D spatial
00:06:27.000 domain we've got X and Y coordinates
00:06:29.360 that show us what the attenuation value
00:06:31.599 is at specific locations in this 2D
00:06:34.080 image and we said that blur is
00:06:36.240 introduced into this 2D image by
00:06:38.440 convoluting the blur function here now
00:06:41.599 we've also seen projection data that's
00:06:43.720 onedimensional data we're looking at the
00:06:46.360 attenuation data through one angle
00:06:48.319 through our patient so we can get 2D
00:06:50.000 No text
00:06:51.080 spatial domain and then we can represent
00:06:52.840 data in the onedimensional spatial
00:06:54.880 domain this is for a specific angle
00:06:57.720 through the patient and we represent
00:06:59.800 this x axis now as R it's known as the
00:07:02.520 radial distance away from the center of
00:07:04.800 the
00:07:05.520 detector again this is a onedimensional
00:07:07.720 spatial domain we say that the
00:07:10.360 attenuation data at a specific location
00:07:13.240 is represented by this graph here now if
00:07:16.000 we were to use this one-dimensional
00:07:18.039 spatial data to back project and create
00:07:20.520 a simple back projection image the blur
00:07:23.319 that would be introduced would be
00:07:24.560 represented by this function here a
00:07:26.440 one-dimensional spatial domain blur
00:07:28.599 function
00:07:30.039 now the formulas here aren't important
00:07:32.160 what's important to note is in the
00:07:33.599 spatial domain we convolute the blur
00:07:36.520 function into the spatial domain that
00:07:39.639 describes how blur is introduced into
00:07:41.440 the image what's also important to not
00:07:43.879 is notice how this blur function is
00:07:45.479 discrete data when we measure data we
00:07:48.560 take analog signal and we convert it
00:07:50.520 into a digital signal it's that digital
00:07:53.080 signal that we're going to use to smear
00:07:55.240 over in simple back projection therefore
00:07:57.479 our blur function corresponds to that
00:07:59.520 discrete data now why am I going in a
00:08:02.400 lot of depth here in the spatial domain
00:08:03.840 it's because we can also represent
00:08:05.520 images in a separate domain known as the
00:08:07.000 No text
00:08:08.000 frequency domain now when we're using
00:08:10.520 the spatial domain importantly the blow
00:08:12.560 function is convoluted now why am I
00:08:14.840 going over this well convolution is
00:08:16.919 computationally very demanding it's not
00:08:19.680 multiplying or adding two data sets it's
00:08:22.120 a very computationally demanding process
00:08:24.720 because we have to take the blur
00:08:26.080 function rotate it a full 180° and then
00:08:29.159 apply to each and every location on the
00:08:31.759 spatial domain image it's a very
00:08:33.519 demanding process now the frequency
00:08:36.159 domain is different when we introduce
00:08:38.159 blur in the frequency domain we
00:08:39.839 introduce it through a multiplication
00:08:41.360 not a
00:08:42.519 convolution when we look at our image
00:08:44.560 here we say there are high frequency and
00:08:47.080 low frequency regions within the spatial
00:08:50.120 domain areas where signal doesn't change
00:08:53.160 very much over a certain distance or
00:08:55.360 what's known as low frequency regions in
00:08:57.440 the image and areas where there's an
00:08:59.519 abrupt change in attenuation values like
00:09:01.640 here on the edges of our image is what's
00:09:03.360 known as high frequency regions in our
00:09:05.160 image so high frequency data corresponds
00:09:07.600 to the edges low frequency data
00:09:09.959 corresponds to Regions where signal
00:09:11.480 doesn't change very much over a given
00:09:13.680 distance now whenever we have a graph
00:09:15.959 like this one here that's going over a
00:09:17.959 set distance with different magnitudes
00:09:20.399 we can perform a function on it known as
00:09:22.040 a fuor transformation that's going to
00:09:24.680 show us what frequency of sine waves
00:09:27.160 need to be combined together to create
00:09:30.079 this specific function here and if we
00:09:32.120 were to perform a one-dimensional fuor
00:09:34.000 transform on this projection here we'd
00:09:36.200 get something that looks like this the
00:09:38.560 center of this graph represents the low
00:09:40.640 frequency data as we head out to the
00:09:43.440 peripheries we get the sine waves or the
00:09:46.680 frequencies that represent the edges The
00:09:49.200 High Frequency data points in our image
00:09:52.279 this one-dimensional F transform we use
00:09:54.519 our axis known as K here which
00:09:56.640 represents the different spatial
00:09:58.120 frequencies that occur within this
00:09:59.839 original one-dimensional spatial
00:10:02.079 domain you can see here that the lower
00:10:05.079 frequencies predominate and we get very
00:10:07.519 little higher frequencies out at the
00:10:09.120 periphery we' got very few edges within
00:10:11.079 this image here as well the center of
00:10:13.760 this image is what's known as the DC
00:10:15.480 component that represents the average
00:10:17.079 intensity for our entire projection here
00:10:19.680 now the same can be done in the
00:10:21.040 two-dimensional spatial domain we can
00:10:23.040 perform what's known as a
00:10:23.920 two-dimensional FIA transform and we
00:10:26.160 create an image that looks like this
00:10:27.880 this again is a data set and it's
00:10:30.240 essentially these one-dimensional foror
00:10:33.040 transforms place at different angles on
00:10:36.000 a specific
00:10:37.600 Matrix the center of this image is
00:10:40.000 what's known as the low frequency region
00:10:42.320 of the image as we head out to the
00:10:43.959 peripheries we're talking about the high
00:10:45.480 frequency data from this two-dimensional
00:10:47.959 image the specifics here aren't hugely
00:10:50.880 important just knowing where the low
00:10:52.519 frequency and where the high frequency
00:10:54.399 data is the intensity the brightness of
00:10:57.480 the signal here represents the magnet
00:10:59.480 we've got a lot of low frequency data
00:11:01.480 very little high frequency data it turns
00:11:04.560 out that for different projection angles
00:11:06.519 we can create different one-dimensional
00:11:08.440 frequency domains for each projection
00:11:10.560 angle and essentially those projection
00:11:12.800 angles correspond to the different
00:11:14.839 angles running through this
00:11:15.920 two-dimensional FIA transform they're
00:11:18.240 not we can't place them directly on here
00:11:19.920 but they do correspond that's what's
00:11:21.200 known as the central slice theorem which
00:11:23.079 again is outside the scope of this
00:11:24.760 torque now just for completeness sake
00:11:27.360 let's label the axes here we got u and v
00:11:30.480 v represents the spatial frequency
00:11:32.360 changes in the vertical portion of our
00:11:34.760 original image and U represents the
00:11:36.959 spatial frequency changes along the
00:11:39.120 horizontal range of our image here we
00:11:41.680 can see we get combinations of u and v
00:11:44.079 as we change that angle through our
00:11:46.079 two-dimensional image now why go through
00:11:48.279 the bother of creating these frequency
00:11:50.279 domains surely we're adding an extra
00:11:51.839 step into the process well the key here
00:11:54.320 comes into figuring out how is blur
00:11:56.000 No text
00:11:56.440 represented in the frequency domain and
00:11:59.000 I said say to you that in the spatial
00:12:00.959 domain we represent blur in the image by
00:12:03.320 convoluting that data in the frequency
00:12:05.079 domain we multiply blur into the image
00:12:09.040 this represents the low pass filter that
00:12:11.560 I was talking about notice how the
00:12:13.959 frequencies in the center of this the
00:12:15.720 low frequencies are Amplified by our
00:12:18.519 blur function and the high frequencies
00:12:21.440 are suppressed by this blur function we
00:12:24.000 can multiply this function directly with
00:12:26.320 this one-dimensional frequency domain
00:12:28.040 data set the same occurs in the
00:12:31.000 two-dimensional frequency domain we can
00:12:33.560 see here's the blur function the center
00:12:35.839 of the image all of these values get
00:12:37.639 really Amplified we get a low pass
00:12:39.720 filter low frequency data is allowed to
00:12:42.199 pass through the filter high frequency
00:12:44.959 data is suppressed and this is the Crux
00:12:47.959 of filtered back projection what we want
00:12:50.320 to do is reverse this blur function so
00:12:53.519 we've created different images in the
00:12:55.440 spatial domain and the frequency domain
00:12:57.360 they all represent the data that used to
00:12:58.000 No text
00:12:59.560 create a simple back projection image
00:13:01.360 now let's look at how we go about
00:13:02.839 removing that blur and I'm going to
00:13:04.279 start with the frequency domain cuz this
00:13:06.199 is what's most commonly done in practice
00:13:08.120 we're removing blur in the frequency
00:13:09.760 domain here here's our simple back
00:13:11.680 projection image and here's our
00:13:13.320 two-dimensional and onedimensional fer
00:13:15.279 transform of these images now we said
00:13:17.959 that blur is a multiplication of the
00:13:19.760 blur function and this one d f transform
00:13:22.560 as well as this blur function with a 2d
00:13:24.360 for your transform these are
00:13:25.920 representing the same thing but we're
00:13:27.440 dealing with a two-dimensional frequency
00:13:29.480 domain and a one-dimensional frequency
00:13:31.920 domain if we were to perform an inverse
00:13:34.800 foro transform form we would create a
00:13:37.120 projection that looks like this we've
00:13:38.360 seen this before again this is not going
00:13:41.000 to work if we then back project at
00:13:42.800 multiple different angles we're going to
00:13:44.360 create the blur because of this blur
00:13:46.360 function the same in a two-dimensional
00:13:48.920 fer transform now this is where we go
00:13:51.600 about removing blur from our image we
00:13:54.160 apply what's known as a ramp filter this
00:13:56.000 No text
00:13:56.839 is the filter in filtered back
00:13:58.639 projection
00:14:00.000 a ramp filter suppresses this low
00:14:02.399 frequency data that's been increased by
00:14:05.040 our blur function and we are increasing
00:14:08.320 the high frequency data in the BL blur
00:14:10.560 function we're counteracting this blur
00:14:12.880 function we want to bring about more
00:14:15.519 high frequency data and suppress some of
00:14:17.680 that low frequency data and this Ram
00:14:20.000 filter is what allows us to do that we
00:14:22.920 can see in the two-dimensional domain
00:14:25.199 the same thing happens a ram filter
00:14:27.279 amplifies the edges of our blur function
00:14:29.759 here allows us to get more high
00:14:31.320 frequency data now this blur function is
00:14:35.000 innate within our one-dimensional for
00:14:37.120 transform so we need to apply this Ram
00:14:39.120 filter to the one-dimensional for
00:14:41.279 transform and that's going to negate
00:14:42.920 that blur function now if we were to
00:14:47.040 perform an inverse foro transform take
00:14:49.399 frequency data and convert it into
00:14:51.120 spatial data we would get a data set
00:14:53.440 that looks like this much much different
00:14:55.920 notice the change here we've got these
00:14:58.240 negative low loes at the edges of our
00:15:01.000 image here and we've got these positive
00:15:03.160 loes on the other side of each Edge the
00:15:06.240 same mathematical function can be
00:15:07.800 performed in the two-dimensional forer
00:15:09.639 transform we apply that Ram filter we
00:15:11.720 only multiply it very easy for computer
00:15:14.680 to multiply two arrays together instead
00:15:16.720 of having to convolute data again we
00:15:19.320 amplify the peripheries here the
00:15:21.199 brighter signal here is amplifying the
00:15:23.320 higher frequency and suppressing the
00:15:25.199 lower frequency data we take this data
00:15:28.639 that has been filtered using a ramp
00:15:30.600 filter and we can back project our
00:15:33.120 one-dimensional inverse varo transform
00:15:35.639 or we can perform a twood dimensional
00:15:37.880 inverse for your transform here and
00:15:39.680 essentially what's happened is we've
00:15:41.399 removed the blur function and created a
00:15:43.440 filtered back projection image it's a
00:15:46.199 lot to go through but you can see where
00:15:47.920 filter comes from this Ram filter is
00:15:50.639 what counteracting the blur function
00:15:53.040 that has been introduced through the
00:15:54.959 process of spreading data at multiple
00:15:56.920 different angles through an image now we
00:15:59.319 can also remove blur in the spatial
00:16:00.000 No text
00:16:01.040 domain it's only ever really done in the
00:16:02.639 onedimensional spatial domain if it's
00:16:04.600 ever done it's so much easier to remove
00:16:06.759 blur in the frequency domain because of
00:16:08.319 that multiplication with the ram filter
00:16:10.360 not needing to deconvolve so let's get
00:16:12.920 our projection through here this our 1D
00:16:14.759 projection we know that blur is
00:16:17.079 introduced through the convolution of
00:16:18.639 this function and our projection data in
00:16:20.920 order to counteract this blur that we're
00:16:22.759 going to introduce through the process
00:16:24.199 of simple back projection we use what's
00:16:26.279 known as a deconvolution kernel you may
00:16:29.120 have heard of kernels before you may
00:16:30.399 have heard of deconvolution within
00:16:32.560 filtered back projection when we're
00:16:34.160 talking in the frequency domain we're
00:16:35.360 adding a ramp filter we're allowing the
00:16:37.560 higher frequencies to pass through that
00:16:39.279 ramp filter and we're suppressing those
00:16:41.240 lower frequencies when we're talking in
00:16:43.040 the spatial domain we no longer really
00:16:44.920 talk about a ramp filter we talk about
00:16:47.720 deconvolution this is just convoluting
00:16:50.199 this kernel this data set with our
00:16:52.600 projection here and creating the same
00:16:56.120 projection filter projection that we
00:16:57.720 created in our onedimensional filtered
00:17:00.079 back projection now the reason that this
00:17:02.120 filtered projection is the same in the
00:17:03.839 spatial domain as the one we created in
00:17:05.480 the one-dimensional frequency domain is
00:17:07.799 because that deconvolution kernel is
00:17:10.039 essentially a inverse foro transform of
00:17:12.760 the ram filter that we applied in the
00:17:14.599 frequency domain again we can use this
00:17:18.240 back project all of these at different
00:17:20.199 angles these filtered projections and
00:17:22.079 create a filtered back projection image
00:17:24.119 notice the better quality here now I
00:17:26.640 know these processes that we've gone
00:17:28.039 through a little bit abstract we haven't
00:17:29.919 actually defined any mathematical
00:17:31.919 functions we've just been giving broad
00:17:33.720 breast Strokes what I want to do is give
00:17:35.919 you a visual representation of how this
00:17:38.000 is actually occurring and we're going to
00:17:39.679 take a very simple image here at just a
00:17:40.000 No text
00:17:42.360 circle this is the only attenuating
00:17:44.000 structure within this image now if we
00:17:46.320 were to pass X-rays at this angle
00:17:48.160 through this image we're going to create
00:17:49.919 this projection data here and I want to
00:17:51.400 put that projection data to the side now
00:17:53.880 let's go about the steps of filtered
00:17:56.200 back projection the first thing we need
00:17:57.559 to do is perform a fer transform of this
00:18:00.760 data a low frequency data at the middle
00:18:03.760 higher frequency data is out to the
00:18:05.440 periphery we know that to remove blur
00:18:08.120 from this frequency data we need to
00:18:10.159 apply a ramp function now you'll notice
00:18:12.760 I've been curving this ramp function out
00:18:14.840 like this I'm going to show you why
00:18:16.400 that's important later on once we've
00:18:19.240 applied a ram function to this frequency
00:18:22.120 data we can then perform an inverse foro
00:18:24.360 transform and our initial projection
00:18:27.159 data has now been converted to something
00:18:29.120 that looks like this again those
00:18:30.600 negative loes on the edge of our image
00:18:32.559 and positive loes on the other side of
00:18:34.440 that edge now this data is a little bit
00:18:36.880 complicated what I want to do is draw
00:18:38.200 over it with a solid orange line again I
00:18:39.960 want to give you a visual representation
00:18:42.039 here this data I'm going to put back
00:18:44.480 onto our image here you notice that on
00:18:47.400 the peripheries the filter has given
00:18:50.640 zero values then we get Negative lows we
00:18:53.600 got negative values here and positive
00:18:55.960 values where the attenuation is going to
00:18:57.679 occur again negative and zero values we
00:19:00.760 now just apply the process of simple
00:19:02.880 back projection we smear that data over
00:19:05.000 the angle that the x-rays came from
00:19:07.919 positive values and this are going to be
00:19:09.480 represented by light color here negative
00:19:11.840 values are going to be represented by a
00:19:13.840 yellow color on our image notice how as
00:19:16.880 we project that data over now we've
00:19:19.000 created negative loes on either side of
00:19:22.440 this projection that we've averaged out
00:19:24.039 here the zeroed part of the image remain
00:19:26.520 zero remain black there's zero
00:19:27.880 attenuation occurring here now let's
00:19:30.640 change the angle again our projection
00:19:32.440 data is going to be the same no matter
00:19:33.880 why we go around this image because
00:19:35.280 we've created such a simple Circle in
00:19:36.880 the middle
00:19:37.840 here when negative loes cross over
00:19:41.760 previously positive values those values
00:19:44.520 are going to cancel each other out and
00:19:46.080 that's the beauty of this function here
00:19:48.080 it's very specific the values that we
00:19:51.000 have smeared over this region here are
00:19:53.200 going to be cancelled out by these
00:19:54.880 negative values here watch how that
00:19:56.520 happens here as I simple back project
00:19:59.760 that function over a different angle we
00:20:02.200 get negative and positive loes canceling
00:20:04.720 each other out this is the Crux of
00:20:06.840 filtered back projection that's why we
00:20:09.240 need this filtered back projected
00:20:11.600 function here if we change the angle
00:20:14.200 again notice how projecting that over we
00:20:16.880 again get cancellation these negative
00:20:19.039 loes cancel out these positive loes here
00:20:22.880 and you can imagine these being placed
00:20:24.320 much tighter together remember we're
00:20:25.440 doing a th 2,000 projections around a
00:20:28.039 patient for a single slice notice now
00:20:30.720 I'm not going to run it over each time
00:20:32.120 I'm just going to place these now at the
00:20:34.159 different angles notice let me go back
00:20:36.280 notice how the black is increasing here
00:20:38.280 we're canceling out with these negative
00:20:39.960 loes and we're reinforcing the center
00:20:42.120 the center is getting brighter and
00:20:43.280 brighter how edges are also getting more
00:20:45.080 and more smooth if we were to continue
00:20:47.679 this process for the 1,000 projections
00:20:50.039 you would see how that would ultimately
00:20:51.760 end in an image that looks like this
00:20:54.320 it's this process of applying the ram
00:20:56.080 filter either in the onedimensional or
00:20:58.120 the two dimensional frequency domain
00:21:00.039 that's going to give us these crisp
00:21:01.679 edges here we're essentially amplifying
00:21:04.000 the higher frequency data and decreasing
00:21:06.559 the lower frequency data we've got an
00:21:07.880 image now with great contrast and great
00:21:09.880 Edge
00:21:10.919 definition now remember a patient
00:21:12.919 doesn't look like this but the process
00:21:14.679 stays exactly the same we're going to
00:21:16.679 get better Edge definition with filtered
00:21:19.000 back projection over simple back
00:21:20.760 projection now this is all well and good
00:21:23.039 but why then don't we often use filtered
00:21:25.679 back projection anymore why are we using
00:21:27.480 the next talks topic iterative
00:21:29.320 reconstruction well the main issue comes
00:21:30.000 No text
00:21:31.200 when we're looking at Noise We Know
00:21:33.559 inherently there's going to be noise in
00:21:34.960 our image and later on when we look at
00:21:36.320 image quality I'm going to show you how
00:21:38.159 noise is introduced in the image but say
00:21:40.679 we were to create a cogram here but we
00:21:42.640 were to add noise into the sinogram
00:21:45.039 either through the detectors or through
00:21:46.520 patient factors here we can see that
00:21:49.039 there's background noise how then does
00:21:51.559 full to back projection deal with this
00:21:53.400 background noise well it doesn't deal
00:21:54.720 with it very well let's take one line
00:21:56.679 from our sinogram and plot the predicted
00:22:00.200 projection that we would have through
00:22:01.400 this patient this is what we would
00:22:02.760 predict but when there's noise in the
00:22:04.760 image I'm going to show you what noise
00:22:06.000 looks like with this green data
00:22:07.559 overlying our predicted
00:22:09.559 data this is what our detectors actually
00:22:12.279 register in the computer in the CT
00:22:13.960 scanner if we were to perform the fer
00:22:16.480 transform we would see our foro
00:22:19.480 transform our low frequency and high
00:22:21.039 frequency data but what's really
00:22:23.159 important is to zoom in on this point
00:22:24.600 see the green line here that's the noise
00:22:27.240 contribution to the frequency data if we
00:22:29.679 zoom in on the peripheries look how the
00:22:31.200 noise is actually higher than some of
00:22:33.159 that high frequency signal that was
00:22:34.640 creating our Edge
00:22:36.120 definition if we apply the ram filter we
00:22:39.240 will increase these higher frequencies
00:22:41.720 we're going to increase noise and we're
00:22:43.240 going to increase the true higher
00:22:44.480 frequencies from our image this is the
00:22:46.559 reason that the ram filter curves up
00:22:48.400 like this in attempt to suppress some of
00:22:50.960 that noise that's being added into the
00:22:52.480 image however even with the curving of
00:22:54.799 this Ram filter not just perfectly
00:22:56.360 straight lines like you might see in
00:22:57.559 some textbooks we're still going to
00:22:59.679 amplify noise here in the onedimensional
00:23:01.679 frequency domain and create an image
00:23:03.760 that looks like this we've got some
00:23:06.240 contrast we can see where the
00:23:07.480 attenuating and non- attenuating
00:23:08.799 structures are and we've got Edge
00:23:10.080 definition we have Amplified the higher
00:23:12.600 frequency data points here so we've got
00:23:14.760 good Edge definition but we created a
00:23:16.640 terrible image with lots of noise it's
00:23:19.480 going to inhibit our ability to create
00:23:22.320 any sort of meaningful image now to get
00:23:25.080 around this what we can do is apply a
00:23:27.480 low pass filter or get rid of the higher
00:23:30.200 frequency datas here I'm just going to
00:23:31.640 draw over with an orange line here we're
00:23:33.320 getting rid of this and then we can
00:23:35.600 perform an inverse foro transform on
00:23:37.600 this data set and back project that
00:23:39.679 image and we end up creating an image
00:23:41.240 that looks like this we're back to
00:23:42.320 square one we've got an image that's
00:23:44.640 very blurry got good contrast but we've
00:23:46.679 lost our Edge definition we've had to
00:23:48.520 get rid of those higher frequencies and
00:23:50.799 this is the major issue with filtered
00:23:52.919 back projection is that if there's any
00:23:55.400 noise within the image we're going to
00:23:57.159 amplify that noise with our Ram filters
00:24:00.080 and that's going to create an image
00:24:01.440 that's incredibly noisy if we get rid of
00:24:04.120 that noise it comes at the expans again
00:24:05.919 of edge definition now why go through
00:24:08.679 that whole process only to end up with
00:24:10.840 essentially the same type of image that
00:24:12.480 we started with well in the next talk in
00:24:15.760 part three of this image reconstruction
00:24:17.760 we're going to look at a process known
00:24:18.000 No text
00:24:19.000 as iterative reconstruction and it often
00:24:21.520 starts with this as our initial image a
00:24:23.640 filtered back projection image and it
00:24:25.840 uses this data that we created here and
00:24:28.640 iterates on it to go about removing
00:24:31.039 noise accountable mechanical factors and
00:24:33.399 ultimately create a much better image
00:24:35.799 than we've created here so let's move on
00:24:37.880 to iterative reconstruction I know
00:24:40.080 there's a lot to cover in this talk but
00:24:41.640 I'd encourage you to just know the basic
00:24:44.120 steps how we go about creating frequency
00:24:46.679 data apply a ram filter an inverse foro
00:24:50.159 transform of that frequency data that's
00:24:52.200 had the ram filter applied and then
00:24:54.039 create our filtered back projection
00:24:55.640 image so I'll see you all in the next
00:24:57.320 talk until then good bye everybody
